{"version":3,"sources":["constants/routes.js","context/firebase.js","lib/firebase.js","context/user.js","wdyr.js","helpers/protected-route.js","helpers/is-user-logged-in.js","App.js","hooks/use-auth-listener.js","index.js"],"names":["DASHBOARD","LOGIN","SIGN_UP","PROFILE","NOT_FOUND","FirebaseContext","createContext","firebase","Firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","FieldValue","firestore","UserContext","require","whyDidYouRender","React","trackAllPureComponents","ProtectedRoute","user","children","rest","render","location","to","pathname","ROUTES","state","from","IsUserLoggedIN","loggedInPath","Login","lazy","SignUp","Dashboard","NotFound","Profile","App","useState","JSON","parse","localStorage","getItem","setUser","useContext","useEffect","listener","auth","onAuthStateChanged","authUser","setItem","stringify","removeItem","useAuthListener","Provider","value","fallback","path","component","exact","componenet","ReactDOM","document","getElementById"],"mappings":"yGAAA,0KAAO,IAAMA,EAAY,IACZC,EAAQ,SACRC,EAAU,WACVC,EAAU,eACVC,EAAY,c,gCCJzB,WAEMC,EAAkBC,wBAAc,MAEvBD,O,gCCJf,gFAcME,GAdN,YAciBC,IAASC,cATX,CACbC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,+CAIDC,EAAeR,IAASS,UAAxBD,Y,gCCfR,WAEME,EAAcZ,wBAAc,MAEnBY,O,gFCFSC,EAAQ,GAEhCC,CAAgBC,IAAO,CACrBC,wBAAwB,I,+FCAX,SAASC,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAaC,EAAO,mCACjE,OACG,cAAC,IAAD,2BACIA,GADJ,IAEAC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,SACR,OAAIJ,EACMC,EACED,EAUL,KARD,cAAC,IAAD,CACGK,GAAI,CACDC,SAAUC,IACVC,MAAO,CAAEC,KAAML,UCZrB,SAASM,EAAT,GAAmE,IAAxCV,EAAuC,EAAvCA,KAAKW,EAAkC,EAAlCA,aAAcV,EAAoB,EAApBA,SAAaC,EAAO,kDAC9E,OACG,cAAC,IAAD,2BACIA,GADJ,IAEAC,OAAQ,YAAkB,IAAfC,EAAc,EAAdA,SACR,OAAKJ,EAEMA,EAEL,cAAC,IAAD,CACGK,GAAI,CACDC,SAAUK,EACVH,MAAO,CAAEC,KAAML,MAKpB,KAXGH,MCHnB,IAAMW,EAAQC,gBAAK,kBAAM,gCACnBC,EAASD,gBAAK,kBAAM,gCACpBE,EAAYF,gBAAK,kBAAM,6DACvBG,EAAWH,gBAAK,kBAAM,gCACtBI,EAAUJ,gBAAK,kBAAM,sDAEZ,SAASK,IAAO,IACrBlB,ECZK,WAA4B,IAAD,EAChBmB,mBACtBC,KAAKC,MAAMC,aAAaC,QAAQ,cAFM,mBACjCvB,EADiC,KAC3BwB,EAD2B,KAIhCzC,EAAa0C,qBAAW5C,KAAxBE,SAeR,OAbA2C,qBAAU,WACR,IAAMC,EAAW5C,EAAS6C,OAAOC,oBAAmB,SAACC,GAC/CA,GACFR,aAAaS,QAAQ,WAAYX,KAAKY,UAAUF,IAChDN,EAAQM,KAERR,aAAaW,WAAW,YACxBT,EAAQ,UAGZ,OAAO,kBAAMG,OACZ,CAAC5C,IAEG,CAAEiB,QDPQkC,GAATlC,KAER,OACE,cAAC,IAAYmC,SAAb,CAAsBC,MAAO,CAAEpC,QAA/B,SACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUqC,SAAU,2CAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CACErC,KAAMA,EACNW,aAAcJ,IACd+B,KAAM/B,IAHR,SAKE,cAACK,EAAD,MAEF,cAAC,EAAD,CACEZ,KAAMA,EACNW,aAAcJ,IACd+B,KAAM/B,IAHR,SAKE,cAACO,EAAD,MAEF,cAAC,IAAD,CAAOwB,KAAM/B,IAAgBgC,UAAWtB,IACxC,cAAClB,EAAD,CAAgBC,KAAMA,EAAMsC,KAAM/B,IAAkBiC,OAAK,EAAzD,SACE,cAACzB,EAAD,MAEF,cAAC,IAAD,CAAO0B,WAAYzB,a,kBE/B/B0B,IAASvC,OACP,cAAC,IAAgBgC,SAAjB,CAA0BC,MAAO,CAAErD,aAAUS,gBAA7C,SACE,cAAC0B,EAAD,MAEFyB,SAASC,eAAe,W","file":"static/js/main.1734ab03.chunk.js","sourcesContent":["export const DASHBOARD = '/';\nexport const LOGIN = '/login';\nexport const SIGN_UP = '/sign-up';\nexport const PROFILE = '/p/:username';\nexport const NOT_FOUND = '/not-found';\n","import { createContext } from 'react';\n\nconst FirebaseContext = createContext(null);\n\nexport default FirebaseContext;\n","import Firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n// import { seedDatabase } from '../seed';\n\nconst config = {\n  apiKey: 'AIzaSyCKNxZmjROgzlMb_ExPc_EDmxQY-rSW5n8',\n  authDomain: 'jonstagram-cb171.firebaseapp.com',\n  projectId: 'jonstagram-cb171',\n  storageBucket: 'jonstagram-cb171.appspot.com',\n  messagingSenderId: '747917398260',\n  appId: '1:747917398260:web:947c10af87bfaaa71b8ea1'\n};\n\nconst firebase = Firebase.initializeApp(config);\nconst { FieldValue } = Firebase.firestore;\n\n// call seed file\n// seedDatabase(firebase);\n\nexport { firebase, FieldValue };\n","import { createContext } from 'react';\n\nconst UserContext = createContext(null);\n\nexport default UserContext;\n","import React from \"react\";\n\nconst whyDidYouRender = require(\"@welldone-software/why-did-you-render\");\n\nwhyDidYouRender(React, {\n  trackAllPureComponents: true,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport * as ROUTES from '../constants/routes';\n\nexport default function ProtectedRoute ({ user, children, ...rest}) {\n   return(\n      <Route\n      {...rest}\n      render={({ location}) => {\n         if (user) {\n            return children;\n         } else if (!user) {\n            return (\n               <Redirect\n                  to={{\n                     pathname: ROUTES.LOGIN, \n                     state: { from: location }\n                  }} />\n            )\n         }\n\n         return null;\n      }}\n      />\n   )\n}\n\nProtectedRoute.propTypes = {\n   user: PropTypes.object,\n   children: PropTypes.object.isRequired\n };","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\n// import * as ROUTES from '../constants/routes';\n\nexport default function IsUserLoggedIN ({ user,loggedInPath, children, ...rest}) {\n   return(\n      <Route\n      {...rest}\n      render={({ location}) => {\n         if (!user) {\n            return children;\n         } else if (user) {\n            return (\n               <Redirect\n                  to={{\n                     pathname: loggedInPath, \n                     state: { from: location }\n                  }} />\n            )\n         }\n\n         return null;\n      }}\n      />\n   )\n}\n","import { lazy, Suspense } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport * as ROUTES from \"./constants/routes\";\nimport useAuthListener from \"./hooks/use-auth-listener\";\nimport UserContext from \"./context/user\";\nimport ProtectedRoute from \"./helpers/protected-route\";\nimport IsUserLoggedIn from \"./helpers/is-user-logged-in\";\n\nconst Login = lazy(() => import(\"./pages/login\"));\nconst SignUp = lazy(() => import(\"./pages/sign-up\"));\nconst Dashboard = lazy(() => import(\"./pages/dashboard\"));\nconst NotFound = lazy(() => import(\"./pages/not-found\"));\nconst Profile = lazy(() => import(\"./pages/profile\"));\n\nexport default function App() {\n  const { user } = useAuthListener();\n\n  return (\n    <UserContext.Provider value={{ user }}>\n      <Router>\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <IsUserLoggedIn\n              user={user}\n              loggedInPath={ROUTES.DASHBOARD}\n              path={ROUTES.LOGIN}\n            >\n              <Login />\n            </IsUserLoggedIn>\n            <IsUserLoggedIn\n              user={user}\n              loggedInPath={ROUTES.DASHBOARD}\n              path={ROUTES.SIGN_UP}\n            >\n              <SignUp />\n            </IsUserLoggedIn>\n            <Route path={ROUTES.PROFILE} component={Profile} />\n            <ProtectedRoute user={user} path={ROUTES.DASHBOARD} exact>\n              <Dashboard />\n            </ProtectedRoute>\n            <Route componenet={NotFound} />\n          </Switch>\n        </Suspense>\n      </Router>\n    </UserContext.Provider>\n  );\n}\n","import { useState, useEffect, useContext } from \"react\";\nimport FirebaseContext from \"../context/firebase\";\n\nexport default function useAuthListener() {\n  const [user, setUser] = useState(\n    JSON.parse(localStorage.getItem(\"authUser\"))\n  );\n  const { firebase } = useContext(FirebaseContext);\n\n  useEffect(() => {\n    const listener = firebase.auth().onAuthStateChanged((authUser) => {\n      if (authUser) {\n        localStorage.setItem(\"authUser\", JSON.stringify(authUser));\n        setUser(authUser);\n      } else {\n        localStorage.removeItem(\"authUser\");\n        setUser(null);\n      }\n    });\n    return () => listener();\n  }, [firebase]);\n\n  return { user };\n}\n","import './wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport FirebaseContext from './context/firebase';\nimport { firebase, FieldValue } from './lib/firebase';\nimport './styles/app.css';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={{ firebase, FieldValue }}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}